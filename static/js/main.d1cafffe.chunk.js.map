{"version":3,"sources":["Components/MainTitle.js","Containers/StartPage/StartPage.js","Containers/GamePage/Components/Cell.js","Containers/GamePage/Components/Column.js","constants.js","Containers/GamePage/Components/TopLine.js","Containers/GamePage/Components/Field.js","Components/Chip.js","Components/TopName.js","Components/WrapTopName.js","Services/Services.js","Components/Title.js","Utils/Utils.js","Components/LargeButton.js","Containers/GamePage/Components/EndGameModal.js","Containers/GamePage/GamePage.js","Containers/SelectColorPage/Components/ChipsCarousel.js","Components/Button.js","Containers/SelectColorPage/SelectColorPage.js","Containers/GameModePage/Loading.js","Containers/GameModePage/MenuModal.js","Containers/GameModePage/GameModePage.js","Containers/EnterNamePage/EnterNamePage.js","App.js","index.js","Server/constants.js"],"names":["MainTitle","react_default","a","createElement","className","style","this","props","text","PureComponent","StartPage","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","activateRedirect","state","redirected","react_router","to","showLogo","duration","defaultStyle","transition","concat","opacity","transitionStyles","entering","entered","exiting","exited","_this2","timer","setTimeout","setState","clearTimeout","_this3","showing","react_transition_group","in","timeout","objectSpread","MainTitle_MainTitle","Cell","changeCellColor","backgroundColor","classes","Component","Column","renderCells","toConsumableArray","column","map","cell","index","Cell_Cell","key","dropChip","onClick","GAME_TYPE","freeze","SINGLE_PLAYER","MULTIPLAYER","DIFFICULT_GAME","EASY","HARD","MAPPING_COLOR_TO_CLASS_NAME","0","1","2","3","4","5","TopLine","WIN_FIRST_PLAYER","WIN_SECOND_PLAYER","DRAW","CONTINUE","passCellsRefs","localProps","getTopLineRefs","refs","getRefs","ref","push","console","log","line","i","Field","enableHighlight","disableHighlight","passFieldRef","getFieldRef","fieldRef","renderGameCells","field","Column_Column","renderTransparentCells","onMouseEnter","onMouseLeave","React","createRef","passProps","highlightCell","selectedColumn","TopLine_TopLine","Chip","color","TopName","goToChangeName","actions","goToChangeColor","_this$props","name","Chip_Chip","WrapTopName","TopName_TopName","Services","axios","get","config","address","port","then","response","difficulty","data","post","Promise","resolve","catch","reject","id","Title","translateOnFocus","disableAnimation","waiting","focus","returnOriginal","paddingTop","marginBottom","phrase","arguments","length","undefined","dictionary","textDecorator","LargeButton","click","EndGameModal","enableLoading","loading","disableLoading","goToSelectGameMode","playAgain","react_modal_lib_default","ariaHideApp","closeTimeoutMS","isOpen","contentLabel","onRequestClose","Title_Title","LargeButton_LargeButton","GamePage","animate","options","start","performance","now","requestAnimationFrame","time","timeFraction","progress","timing","draw","makeEaseOut","bounce","b","Math","pow","bounceEaseOut","getHeightForChipFall","topLineRefs","offsetHeight","lastIndexOf","animateCell","rivalMove","element","width","top","returnChipAfterAnimation","finishGame","resetGame","updateField","updateFieldAfterYourMove","updatedField","lastIndex","youShouldMove","yourMove","rivalShouldMove","_ref","asyncToGenerator","regenerator_default","mark","_callee","indexColumn","_this$state","wrap","_context","prev","next","playerData","stop","_x","apply","enterToColumn","_ref2","_callee2","_context2","isFullStack","_x2","leaveColumn","_ref3","_callee3","_context3","_x3","_ref4","_callee4","_context4","move","statusGame","STATUS_GAME","_x4","clearGameState","generateField","deleteSinglePlayer","_ref5","_callee5","_context5","_x5","_callee6","_context6","_callee7","_context7","navigateTo","j","route","history","redirect","activeGame","rival","_this$state2","WrapTopName_WrapTopName","Field_Field","EndGameModal_EndGameModal","ChipsCarousel","updateWindowDimensions","window","innerWidth","selectColor","setWidthSlider","settings","centerMode","infinite","centerPadding","slidesToShow","speed","afterChange","slider","addEventListener","removeEventListener","react_slick_lib_default","assign","Button","children","SelectColorPage","selectedColor","submitColor","submitPlayerData","activeLink","_this$props$playerDat","ChipsCarousel_ChipsCarousel","react_router_dom","Button_Button","Loading","MenuModal","offLoading","startGame","renderContentForSinglePlayer","Fragment","renderContentForMultiplayer","renderContent","gameMode","close","Loading_Loading","GameModePage","openModalSinglePlayer","showModal","openModalMultiplayer","closeModal","startSinglePlayer","res","addToSinglePlayer","sent","startMultiplayer","_this$props$playerDat2","addToMultiplayer","selectedGameType","_this$props$playerDat3","_this$props$playerDat4","MenuModal_MenuModal","EnterNamePage","onChangeText","value","inputText","notification","saveName","changeClassNameNotification","type","onChange","event","target","params","App","room","OpenSocket","on","emit","room1","routes","path","exact","match","classNames","unmountOnExit","ReactDOM","render","src_App_0","document","getElementById","exports","__esModule"],"mappings":"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","file":"static/js/main.d1cafffe.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\r\n\r\nexport default class MainTitle extends PureComponent {\r\n    render() {\r\n        return <h1 className='mainTitle' style={this.props.style}>{this.props.text}</h1>\r\n    }\r\n}\r\n","import React, {PureComponent} from 'react';\r\nimport MainTitle from \"../../Components/MainTitle\";\r\nimport {Transition} from 'react-transition-group';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nclass StartPage extends PureComponent{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showLogo: false,\r\n        };\r\n        this.redirected = false;\r\n        this.duration = 1200;\r\n        this.defaultStyle = {\r\n            transition: `${this.duration}ms linear`,\r\n            opacity: 1,\r\n        };\r\n        this.transitionStyles = {\r\n            entering: { opacity: 1 },\r\n            entered:  { opacity: 1 },\r\n            exiting:  { opacity: 0 },\r\n            exited:   { opacity: 0 },\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.timer = setTimeout(() => {\r\n            this.setState({showLogo: true});\r\n            clearTimeout(this.timer);\r\n            }, 100);\r\n    }\r\n\r\n    activateRedirect = (state) => {\r\n        if (state === 'entered' && this.redirected === false) {\r\n            this.redirected = true;\r\n            return <Redirect to={'/name'} />;\r\n        }\r\n    };\r\n\r\n\r\n    render() {\r\n        const showing = this.state.showLogo;\r\n        return <Transition in={showing} timeout={3600} >\r\n            {state => {\r\n                return (\r\n                    <div className='startPage' style={{\r\n                        ...this.defaultStyle,\r\n                        ...this.transitionStyles[state]}}>\r\n                        <MainTitle text='4 in row'/>\r\n                        {this.activateRedirect(state)}\r\n                    </div>\r\n                )}}\r\n        </Transition>\r\n    }\r\n\r\n}\r\n\r\nexport default StartPage;\r\n","import React, {Component} from 'react';\r\n\r\nexport default class Cell extends Component{\r\n\r\n    changeCellColor = () => {\r\n        switch (this.props.state) {\r\n            case 1:\r\n                return {backgroundColor: 'red'};\r\n            case 2:\r\n                return {backgroundColor: 'blue'};\r\n            default:\r\n                return {backgroundColor: 'transparent'};\r\n        }\r\n    };\r\n\r\n    classes = () =>\r\n        (this.props.classes) ?\r\n            this.props.classes :\r\n            '';\r\n\r\n    render() {\r\n        return (\r\n            <div className={`point`}>\r\n                <div className='point-shell' style={this.changeCellColor()}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport Cell from \"./Cell\";\r\n\r\nexport default class Column extends Component{\r\n    renderCells = () => {\r\n        const cells = [...this.props.column];\r\n        return cells.map((cell, index) => <Cell state={cell} key={index}/>)\r\n    };\r\n\r\n    dropChip = (index) =>\r\n        this.props.dropChip(index);\r\n\r\n    render() {\r\n        return (\r\n            <div className='column'\r\n                 onClick={() => this.dropChip(this.props.index)}>\r\n                {this.renderCells()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const ADDRESS = '192.168.0.109';\r\nexport const PORT = {\r\n    CLIENT: '3000',\r\n    SERVER: '3001',\r\n};\r\n\r\nexport const GAME_TYPE = Object.freeze({\r\n    SINGLE_PLAYER: 'SINGLE_PLAYER',\r\n    MULTIPLAYER: 'MULTIPLAYER',\r\n});\r\n\r\nexport const DIFFICULT_GAME = Object.freeze({\r\n    EASY: 'EASY',\r\n    HARD: 'HARD',\r\n});\r\n\r\nexport const MAPPING_COLOR_TO_CLASS_NAME = Object.freeze({\r\n    0: 'chipColor_red',\r\n    1: 'chipColor_blue',\r\n    2: 'chipColor_black',\r\n    3: 'chipColor_pink',\r\n    4: 'chipColor_yellow',\r\n    5: 'chipColor_green',\r\n});\r\n\r\nexport const MAPPING_COLOR_TO_STRING = Object.freeze({\r\n    0: 'red',\r\n    1: 'blue',\r\n    2: 'black',\r\n    3: 'pink',\r\n    4: 'yellow',\r\n    5: 'green',\r\n});\r\n\r\nexport const STATUS_GAME = Object.freeze({\r\n    WIN_FIRST_PLAYER: 'WIN_FIRST_PLAYER',\r\n    WIN_SECOND_PLAYER: 'WIN_SECOND_PLAYER',\r\n    DRAW: 'DRAW',\r\n    CONTINUE: 'CONTINUE',\r\n});\r\n","import React, {PureComponent} from 'react';\r\nimport {MAPPING_COLOR_TO_CLASS_NAME} from \"../../../constants\";\r\n\r\nexport default class TopLine extends PureComponent {\r\n    constructor(props){\r\n        super(props);\r\n        this.line = 7;\r\n        this.refs = [];\r\n        this.localProps = this.props.localProps;\r\n    }\r\n\r\n    passCellsRefs = () =>\r\n        this.localProps.getTopLineRefs(this.refs);\r\n\r\n    componentDidMount() {\r\n        this.passCellsRefs();\r\n    };\r\n\r\n    getRefs = (ref) =>\r\n        this.refs.push(ref);\r\n\r\n    renderCells = () => {\r\n        console.log('renderrefs')\r\n        this.refs = [];\r\n        const line = [];\r\n        for (let i = 0; i < this.line; i++) {\r\n                line.push(\r\n                    <div className={`point`} key={i}>\r\n                        <div className={`point-shell point-drop`} ref={this.getRefs}/>\r\n                    </div>)\r\n        }\r\n        return line;\r\n    };\r\n\r\n    render() {\r\n        console.log(this);\r\n        return (\r\n            <div className='topLineCells'>\r\n                {this.renderCells()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport Column from \"./Column\";\r\nimport TopLine from \"./TopLine\";\r\n\r\nexport default class Field extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.fieldRef = React.createRef();\r\n        this.localProps = this.props.localProps;\r\n        this.passProps = {\r\n            getTopLineRefs: this.getTopLineRefs,\r\n            highlightCell: this.props.localProps.selectedColumn,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.passFieldRef();\r\n    }\r\n\r\n    getTopLineRefs = (refs) =>\r\n        this.localProps.getTopLineRefs(refs);\r\n    enableHighlight = (column) =>\r\n        this.localProps.enableHighlight(column);\r\n    disableHighlight = (column) =>\r\n         this.localProps.disableHighlight(column);\r\n    dropChip = (column) =>\r\n        this.localProps.dropChip(column);\r\n    passFieldRef = () =>\r\n        this.localProps.getFieldRef(this.fieldRef);\r\n\r\n    renderGameCells = () => {\r\n        const columns = this.props.field;\r\n        return columns.map((column, index) =>\r\n            <Column column={column}\r\n                    index={index}\r\n                    key={index}\r\n            />);\r\n    };\r\n\r\n    renderTransparentCells = () => {\r\n        const field = this.props.localProps.field;\r\n        return field.map((column, index) =>\r\n            <div className='column'\r\n                 key={index}\r\n                 onMouseEnter={() => this.enableHighlight(index)}\r\n                 onMouseLeave={() => this.disableHighlight(index)}\r\n                 onClick={() => this.dropChip(index)}>\r\n                {column.map((cell, index) =>\r\n                    <div className='point-transparent'\r\n                         key={index}\r\n                    />\r\n                )}\r\n            </div>)\r\n    };\r\n    render() {\r\n        return (\r\n            <div className='field'>\r\n                <div className='field-static field-static_transparent'>\r\n                    <div className='field-chipsShell'>\r\n                        <TopLine localProps={this.passProps}/>\r\n                        {this.renderTransparentCells()}\r\n                    </div>\r\n                </div>\r\n                <div className='field-static' ref={this.fieldRef}>\r\n                    <div className=\"field-chipsShell field-chipsShell_game\">\r\n                        {this.renderGameCells()}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {PureComponent} from 'react';\nimport {MAPPING_COLOR_TO_CLASS_NAME} from \"../constants\";\n\nexport default class Chip extends PureComponent {\n    onClick = () =>\n        this.props.onClick && this.props.onClick();\n    render() {\n        const {color} = this.props;\n        return <div className={`chip ${MAPPING_COLOR_TO_CLASS_NAME[color]}`}\n                    onClick={this.onClick}/>\n    }\n}\n","import React, {PureComponent} from 'react';\nimport Chip from \"./Chip\";\n\nexport default class TopName extends PureComponent {\n    goToChangeName = () =>\n        this.props.actions &&\n            this.props.actions.goToChangeName ?\n                this.props.actions.goToChangeName() :\n                null;\n    goToChangeColor = () =>\n        this.props.actions &&\n            this.props.actions.goToChangeColor ?\n                this.props.actions.goToChangeColor() :\n                null;\n    classes = () =>\n        (this.props.classes) ?\n            this.props.classes :\n            '';\n\n\n    render() {\n        const {name, color} = this.props;\n        return (\n            <div className={`viewPlayer ${this.classes()}`}>\n                {name && <h2 className='titlePlayerName' onClick={this.goToChangeName}>{name}</h2>}\n                {color !== null && <Chip color={color} onClick={this.goToChangeColor}/>}\n            </div>\n        )\n    }\n\n}\n","import React, {PureComponent} from 'react';\nimport TopName from \"./TopName\";\n\nexport default class WrapTopName extends PureComponent {\n    actions = () =>\n        this.props.actions &&\n            this.props.actions();\n\n    render() {\n        const {name, color, actions} = this.props;\n        return (\n            <div className='wrapTopName'>\n                <TopName name={name} color={color} actions={actions}/>\n            </div>\n        )\n    }\n}\n","import axios from 'axios';\r\nimport config from '../address-config';\r\n\r\nexport default class Services {\r\n    static getGameField() {\r\n        return axios.get(`http://${config.address}:${config.port}/game`)\r\n            .then((response) => {console.log(response)});\r\n    }\r\n\r\n    static addToSinglePlayer(name, color, difficulty) {\r\n        const data = {\r\n            name,\r\n            color,\r\n            difficulty\r\n        };\r\n        return axios.post(`http://${config.address}:${config.port}/singlePlayer`, data)\r\n            .then((response) => Promise.resolve(response.data))\r\n            .catch((reject) => Promise.reject(reject));\r\n    }\r\n\r\n    static addToMultiplayer(name, color) {\r\n        const data = {\r\n            name,\r\n            color\r\n        };\r\n        return axios.post(`http://${config.address}:${config.port}/multiplayer`, data)\r\n            .then((response) => Promise.resolve(response.data))\r\n            .catch((reject) => Promise.reject(reject));\r\n    }\r\n\r\n    static deleteSinglePlayer(id){\r\n        const data = { id };\r\n        return axios.post(`http://${config.address}:${config.port}/deleteSinglePlayer`, data)\r\n            .then((response) => Promise.resolve(response.data))\r\n            .catch((reject) => Promise.reject(reject));\r\n    }\r\n\r\n    static playAgain(id){\r\n        const data = { id };\r\n        return axios.post(`http://${config.address}:${config.port}/playAgainSinglePlayer`, data)\r\n            .then((response) => Promise.resolve(response.data))\r\n            .catch((reject) => Promise.reject(reject));\r\n    }\r\n\r\n    static move(index, id) {\r\n        const data = {\r\n            index,\r\n            id\r\n        };\r\n        return axios.post(`http://${config.address}:${config.port}/move`, data)\r\n            .then((response) => Promise.resolve(response.data))\r\n            .catch((resolve) => Promise.reject(resolve));\r\n    }\r\n}\r\n","import React, {PureComponent} from 'react';\nimport {textDecorator} from \"../Utils/Utils\";\nimport {Transition} from 'react-transition-group';\n\nexport default class Title extends PureComponent{\n    constructor(props) {\n        super(props);\n        this.state = {\n            focus: false,\n            waiting: false,\n        };\n        this.timer = null;\n        this.duration = 400;\n        this.defaultStyle = {\n            transition: `${this.duration}ms linear`,\n            opacity: 0,\n        };\n        this.transitionStyles = {\n            entering: { opacity: 0, paddingTop: 0, marginBottom: 50 },\n            entered:  { opacity: 1 },\n            exiting:  { opacity: 0, paddingTop: 20, marginBottom: 30 },\n            exited:   { opacity: 1 },\n        };\n    }\n    translateOnFocus = () => {\n        if (!this.props.disableAnimation) {\n            if (!this.state.waiting) {\n                this.setState({waiting: true});\n                this.timer = setTimeout(() => this.setState({focus: true}), 3000);\n            }\n        }\n    };\n    returnOriginal = () => {\n        if (!this.props.disableAnimation) {\n            clearTimeout(this.timer);\n            this.setState({\n                focus: false,\n                waiting: false,\n            });\n        }\n    };\n    render() {\n        return (\n            <Transition in={this.state.focus} timeout={200}>\n                {state => {\n                    return <h2 className='title'\n                               style={{\n                                   ...this.defaultStyle,\n                                   ...this.transitionStyles[state]\n                               }}\n                               onMouseEnter={this.translateOnFocus}\n                               onMouseLeave={this.returnOriginal}>\n                        {textDecorator(this.props.text, (state === 'exiting' || state === 'entered'))}\n                    </h2>\n                }}\n            </Transition>\n        )\n    }\n}\n","import dictionary from '../dictionary.json'\r\n\r\nexport function textDecorator(phrase, state = false) {\r\n    return (state) ?\r\n        dictionary[phrase]['ru'] :\r\n        dictionary[phrase]['en'];\r\n}\r\n","import React, {PureComponent} from 'react';\r\n\r\nexport default class LargeButton extends PureComponent {\r\n\r\n    click = () =>\r\n        this.props.onClick();\r\n\r\n    render() {\r\n        return (\r\n            <div className='largeButton' onClick={this.click}>\r\n                <div className=\"largeButton_submit\">{this.props.text}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React, {PureComponent} from 'react';\r\nimport Modal from 'react-modal';\r\nimport Title from \"../../../Components/Title\";\r\nimport LargeButton from \"../../../Components/LargeButton\";\r\n\r\nexport default class EndGameModal extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n        };\r\n    }\r\n\r\n    enableLoading = () =>\r\n        this.setState({loading: true});\r\n\r\n    disableLoading = () =>\r\n        this.setState({loading: false});\r\n\r\n    goToSelectGameMode = () =>\r\n        this.props.goToSelectGameMode();\r\n\r\n    playAgain = () =>\r\n        this.props.playAgain();\r\n\r\n    render() {\r\n        const {state} = this.props;\r\n        return (\r\n            <Modal\r\n                ariaHideApp={false}\r\n                closeTimeoutMS={400}\r\n                isOpen={state}\r\n                contentLabel=\"modal\"\r\n                onRequestClose={() => {}}\r\n            >\r\n                <Title text={'finish_game'}/>\r\n                <div className='largeButtonsWrap'>\r\n                    <LargeButton onClick={this.playAgain}\r\n                                 text={'Play again'}/>\r\n                    <LargeButton onClick={this.goToSelectGameMode}\r\n                                 text={'Go to select mode'}/>\r\n                </div>\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\nimport Field from \"./Components/Field\";\nimport {Redirect} from \"react-router-dom\";\nimport WrapTopName from \"../../Components/WrapTopName\";\nimport {MAPPING_COLOR_TO_STRING} from \"../../constants\";\nimport Services from \"../../Services/Services\";\nimport {STATUS_GAME} from \"../../Server/constants\";\nimport EndGameModal from \"./Components/EndGameModal\";\n\nclass GamePage extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            field: [...this.generateField()],\n            yourMove: true,\n            rival: null,\n            topLineRefs: null,\n            fieldRef: null,\n            selectedColumn: null,\n            finishGame: false,\n        };\n        this.playerData = this.props.playerData;\n\n        this.redirected = false;\n        this.passProps = {\n            getTopLineRefs: this.getTopLineRefs,\n            field: this.state.field,\n            playerData: this.playerData,\n            enableHighlight: this.enterToColumn,\n            disableHighlight: this.leaveColumn,\n            selectedColumn: this.state.selectedColumn,\n            dropChip: this.dropChip,\n            getFieldRef: this.getFieldRef,\n        }\n    }\n\n    /* Animation */\n\n    animate = (options) => {\n        let start = performance.now();\n        requestAnimationFrame(function animate(time) {\n            // timeFraction от 0 до 1\n            let timeFraction = (time - start) / options.duration;\n            if (timeFraction > 1) timeFraction = 1;\n            // текущее состояние анимации\n            let progress = options.timing(timeFraction);\n            options.draw(progress);\n            if (timeFraction < 1) {\n                requestAnimationFrame(animate);\n            }\n        });\n    };\n\n    makeEaseOut = (timing) =>\n        (timeFraction) =>\n            1 - timing(1 - timeFraction);\n\n    bounce = (timeFraction) => {\n        for (let a = 0, b = 1, result; 1; a += b, b /= 2) {\n            if (timeFraction >= (7 - 4 * a) / 11) {\n                return -Math.pow((11 - 6 * a - 11 * timeFraction) / 4, 2) + Math.pow(b, 2)\n            }\n        }\n    };\n\n    bounceEaseOut = () =>\n        this.makeEaseOut(this.bounce);\n\n    getHeightForChipFall = (column = this.state.selectedColumn) => {\n        const cellHeight = this.state.topLineRefs[0].offsetHeight / 0.8;\n\n        const { field } = this.state;\n        const indexCellToDrop = field[column].lastIndexOf(0) + 1;\n\n        return cellHeight * indexCellToDrop + 10;\n    };\n\n    animateCell = (column = this.state.selectedColumn, rivalMove) =>\n        new Promise((resolve) => {\n            const { topLineRefs } = this.state;\n            const element = topLineRefs[column];\n            const width = this.getHeightForChipFall(column);\n            if (rivalMove) {\n                topLineRefs[column].style.backgroundColor = 'blue';\n            }\n            this.animate({\n                duration: 1400,\n                timing: this.bounceEaseOut(),\n                draw: (progress) => {\n                    element.style.top = progress * width + 'px';\n                    if (progress === 1) {\n                        resolve()\n                    }\n                }\n            });\n        });\n\n    returnChipAfterAnimation = (column) => {\n        const {topLineRefs} = this.state;\n        topLineRefs[column].style.backgroundColor = 'transparent';\n        topLineRefs[column].style.top = 0;\n    };\n\n    /* Manipulation Current State */\n\n    finishGame = () =>\n        this.setState({ finishGame: true });\n\n    resetGame = () =>\n        this.setState({ finishGame: false });\n\n    getTopLineRefs = (refs) =>\n        this.setState({ topLineRefs: refs });\n\n    getFieldRef = (ref) =>\n        this.setState({ fieldRef: ref });\n\n    updateField = (field) =>\n        this.setState({ field });\n\n    updateFieldAfterYourMove = (column) => {\n        const updatedField = [...this.state.field];\n        const lastIndex = updatedField[column].lastIndexOf(0);\n        updatedField[column][lastIndex] = 1;\n        this.updateField(updatedField);\n        this.returnChipAfterAnimation(column);\n    };\n\n    youShouldMove = () =>\n        this.setState({ yourMove: true });\n\n    rivalShouldMove = () =>\n        this.setState({ yourMove: false });\n\n    enableHighlight = async (indexColumn) => {\n        await this.setState(() => ({selectedColumn: indexColumn}));\n        const {selectedColumn, topLineRefs} = this.state;\n        const {color} = this.playerData;\n        topLineRefs[selectedColumn].style.backgroundColor = 'red'; // MAPPING_COLOR_TO_STRING[color]\n    };\n\n    disableHighlight = () =>\n        this.setState({ selectedColumn: null });\n\n    /* Game moves */\n\n    enterToColumn = async (index) => {\n        const {yourMove} = this.state;\n        if (yourMove && !this.isFullStack(index)) {\n            await this.enableHighlight(index);\n        }\n    };\n\n    leaveColumn = async (column) => {\n        const {yourMove} = this.state;\n        if (yourMove) {\n            this.returnChipAfterAnimation(column);\n            await this.disableHighlight(column);\n        }\n    };\n\n    dropChip = async (column) => {\n        if (!this.isFullStack(column)) {\n            const {yourMove} = this.state;\n            if (yourMove) {\n                await this.rivalShouldMove();\n                await this.enableHighlight(column);\n                this.animateCell()\n                    .then(() => {\n                        this.updateFieldAfterYourMove(column);\n                        return Services.move(column, this.props.playerData.id);\n                    })\n                    .then((response) => {\n                        console.log(response);\n                        const {statusGame, column, field} = response;\n                        if (field) {\n                            this.animateCell(column, true)\n                                .then(() => {\n                                    this.updateField(field);\n                                    this.returnChipAfterAnimation(column);\n                                    this.youShouldMove();\n                                    if (statusGame !== STATUS_GAME.CONTINUE) {\n                                        this.finishGame();\n                                    }\n                                })\n                        } else {\n                            this.finishGame();\n                        }\n                    });\n            }\n        }\n    };\n\n    /* After game */\n\n    clearGameState = () => {\n        this.disableHighlight();\n        this.updateField(this.generateField());\n        this.youShouldMove();\n        this.resetGame();\n    };\n\n    deleteSinglePlayer = async (id) => {\n        await Services.deleteSinglePlayer(id);\n    };\n\n    playAgain = async () => {\n        const { id } = this.playerData;\n        await Services.playAgain(id);\n        this.clearGameState()\n    };\n\n    goToSelectGameMode = async () => {\n        const { id } = this.playerData;\n        this.clearGameState(id);\n        await this.deleteSinglePlayer(id);\n        this.navigateTo('/mode');\n    };\n\n    /* Support methods */\n\n    generateField = () => {\n        const field = [];\n        for (let i = 0; i < 7; i++) {\n            field.push([]);\n            for (let j = 0; j < 6; j++) {\n                field[i].push(0);\n            }\n        }\n        return field;\n    };\n\n    navigateTo = (route) =>\n        this.props.history.push(route);\n\n    isFullStack = (index) =>\n        this.state.field[index].lastIndexOf(0) === -1;\n\n    redirect = () => {\n        const { activeGame } = this.props.playerData;\n        if (!activeGame && !this.redirected) {\n            this.redirected = true;\n            // return <Redirect to='/mode' />;\n        }\n    };\n\n    render() {\n        const {field, finishGame} = this.state;\n        return (\n            <div className='wrapPage'>\n                <WrapTopName name={'maxim'} color={1}/>\n                <Field localProps={this.passProps}\n                       field={field}/>\n                <EndGameModal state={finishGame}\n                              goToSelectGameMode={this.goToSelectGameMode}\n                              playAgain={this.playAgain}/>\n            </div>\n        )\n    }\n}\n\nexport default GamePage;\n","import React, {PureComponent} from 'react';\r\nimport Slider from 'react-slick';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nexport default class ChipsCarousel extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            width: 0,\r\n        };\r\n\r\n        this.settings = {\r\n            className: \"center\",\r\n            centerMode: true,\r\n            infinite: true,\r\n            centerPadding: \"0px\",\r\n            slidesToShow: 3,\r\n            speed: 300,\r\n            afterChange: (index) => this.selectColor(index),\r\n        };\r\n\r\n        this.slider = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateWindowDimensions();\r\n        window.addEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.updateWindowDimensions);\r\n    }\r\n\r\n    updateWindowDimensions = () => {\r\n        this.setState({ width: window.innerWidth });\r\n    };\r\n\r\n    selectColor = (color) => {\r\n        this.props.selectColor(color);\r\n    };\r\n\r\n    setWidthSlider = () =>\r\n        (this.state.width > 500) ?\r\n            {width: 400} :\r\n            {width: 230};\r\n\r\n    render() {\r\n        const width = this.setWidthSlider();\r\n        return (\r\n            <div style={width} className={this.props.classes}>\r\n                <Slider {...this.settings} ref={this.slider}>\r\n                    <div>\r\n                        <div className='chip chipColor_red'/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='chip chipColor_blue'/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='chip chipColor_black'/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='chip chipColor_pink'/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='chip chipColor_yellow'/>\r\n                    </div>\r\n                    <div>\r\n                        <div className='chip chipColor_green'/>\r\n                    </div>\r\n                </Slider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {PureComponent} from 'react';\r\n\r\nexport default class Button extends PureComponent{\r\n    click = () =>\r\n        this.props.click();\r\n    render() {\r\n        return (\r\n            <button className={`button ${this.props.classes}`}\r\n                       onClick={this.click}>\r\n                {this.props.children}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\nimport Title from \"../../Components/Title\";\nimport ChipsCarousel from \"./Components/ChipsCarousel\";\nimport Button from \"../../Components/Button\";\nimport {Link} from \"react-router-dom\";\nimport WrapTopName from \"../../Components/WrapTopName\";\n\nexport default class SelectColorPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedColor: 0,\n        };\n    }\n\n    selectColor = (color) => {\n        this.setState({selectedColor: color});\n    };\n    submitColor = () => {\n        this.props.submitPlayerData({color: this.state.selectedColor});\n    };\n\n    actions = () => ({\n        goToChangeName: () => this.props.history.push('/name')\n    });\n\n    activeLink = () => {\n        console.log(this.props);\n        const { name } = this.props.playerData;\n        return (name) ?\n            '/mode' :\n            '/name';\n    };\n\n    render() {\n        const {name, color} = this.props.playerData;\n        return (\n            <div className='wrapPage'>\n                <WrapTopName name={name} color={color} actions={this.actions()}/>\n                <Title text='select_color_chip'/>\n                <ChipsCarousel classes={'wrapCarousel'} selectColor={this.selectColor}/>\n                <Link to={this.activeLink()}>\n                    <Button click={this.submitColor} classes='button_submit'>Select color</Button>\n                </Link>\n            </div>\n        )\n    }\n}\n","import React, {PureComponent} from 'react';\r\nimport Title from \"../../Components/Title\";\r\n\r\nexport default class Loading extends PureComponent {\r\n    render() {\r\n        return (\r\n            <div onClick={this.props.onClick}>\r\n                <div className=\"sk-fading-circle\">\r\n                    <div className=\"sk-circle1 sk-circle\"/>\r\n                    <div className=\"sk-circle2 sk-circle\"/>\r\n                    <div className=\"sk-circle3 sk-circle\"/>\r\n                    <div className=\"sk-circle4 sk-circle\"/>\r\n                    <div className=\"sk-circle5 sk-circle\"/>\r\n                    <div className=\"sk-circle6 sk-circle\"/>\r\n                    <div className=\"sk-circle7 sk-circle\"/>\r\n                    <div className=\"sk-circle8 sk-circle\"/>\r\n                    <div className=\"sk-circle9 sk-circle\"/>\r\n                    <div className=\"sk-circle10 sk-circle\"/>\r\n                    <div className=\"sk-circle11 sk-circle\"/>\r\n                    <div className=\"sk-circle12 sk-circle\"/>\r\n                </div>\r\n                <Title text='loading'/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {PureComponent} from 'react';\r\nimport Modal from 'react-modal';\r\nimport Title from \"../../Components/Title\";\r\nimport LargeButton from \"../../Components/LargeButton\";\r\nimport {DIFFICULT_GAME, GAME_TYPE} from \"../../constants\";\r\nimport Loading from \"./Loading\";\r\nimport {Transition} from \"react-transition-group\";\r\nimport GameModePage from \"./GameModePage\";\r\n\r\nexport default class MenuModal extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: false,\r\n        };\r\n    }\r\n\r\n    enableLoading = () =>\r\n        this.setState({loading: true});\r\n\r\n    offLoading = () =>\r\n        this.setState({loading: false});\r\n\r\n    startGame = (difficulty) => {\r\n        this.enableLoading();\r\n        this.props.startGame(difficulty);\r\n    };\r\n\r\n    renderContentForSinglePlayer = () => {\r\n        return (\r\n            <>\r\n                <Title text={'select_difficult'}/>\r\n                <div className='largeButtonsWrap'>\r\n                    <LargeButton onClick={() => this.startGame(DIFFICULT_GAME.EASY) }\r\n                                 text={'Weak in the head'}/>\r\n                    <LargeButton onClick={() => this.startGame(DIFFICULT_GAME.HARD) }\r\n                                 text={'The God'}/>\r\n                </div>\r\n            </>\r\n        )\r\n    };\r\n\r\n    renderContentForMultiplayer = () => {\r\n        return (\r\n            <>\r\n                <Title text={'my_advice'}/>\r\n                <LargeButton onClick={() => this.startGame(DIFFICULT_GAME.EASY) }\r\n                             text={'Search a player'}/>\r\n            </>\r\n        )\r\n    };\r\n\r\n    renderContent = () => {\r\n        const {gameMode} = this.props;\r\n        switch (gameMode) {\r\n            case GAME_TYPE.SINGLE_PLAYER:\r\n                return this.renderContentForSinglePlayer();\r\n            case GAME_TYPE.MULTIPLAYER:\r\n                return this.renderContentForMultiplayer();\r\n            default: return null;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        const {close, state} = this.props;\r\n        const {loading} = this.state;\r\n        return (\r\n            <Modal\r\n                ariaHideApp={false}\r\n                closeTimeoutMS={400}\r\n                isOpen={state}\r\n                contentLabel=\"modal\"\r\n                onRequestClose={() => close()}\r\n            >\r\n                {(loading) ?\r\n                    <Loading onClick={null}/> :\r\n                    this.renderContent()\r\n                }\r\n            </Modal>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\nimport Title from \"../../Components/Title\";\nimport LargeButton from \"../../Components/LargeButton\";\nimport MenuModal from \"./MenuModal\";\nimport Services from \"../../Services/Services\";\nimport {GAME_TYPE} from \"../../constants\";\nimport WrapTopName from \"../../Components/WrapTopName\";\nimport {Redirect} from \"react-router-dom\";\n\nexport default class GameModePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n            gameMode: null,\n        };\n        this.redirected = false;\n    }\n\n\n    openModalSinglePlayer = () =>\n        this.setState({showModal: true, gameMode: GAME_TYPE.SINGLE_PLAYER});\n    openModalMultiplayer = () =>\n        this.setState({showModal: true, gameMode: GAME_TYPE.MULTIPLAYER});\n    closeModal = () =>\n        this.setState({showModal: false, gameMode: null});\n\n    startSinglePlayer = async (difficulty) => {\n        const {name, color} = this.props.playerData;\n        const res = await Services.addToSinglePlayer(name, color, difficulty);\n        this.props.submitPlayerData({id: res.id, activeGame: true});\n        this.closeModal();\n        this.props.history.push('/game');\n    };\n\n    startMultiplayer = async () => {\n        const {name, color} = this.props.playerData;\n        const res = await Services.addToMultiplayer(name, color);\n    };\n\n    selectedGameType = () => {\n        const {gameMode} = this.state;\n        switch (gameMode) {\n            case GAME_TYPE.SINGLE_PLAYER:\n                return this.startSinglePlayer;\n            case GAME_TYPE.MULTIPLAYER:\n                return this.startMultiplayer;\n            default:\n                return this.closeModal;\n        }\n    };\n\n    actions = () => ({\n        goToChangeColor: () => this.props.history.push('/color'),\n        goToChangeName: () => this.props.history.push('/name')\n    });\n\n    redirect = () => {\n        const {name, color} = this.props.playerData;\n        console.log(color);\n        if (!name && !this.redirected) {\n            this.redirected = true;\n            return <Redirect to='/name'/>;\n        }\n        if (color === null && !this.redirected) {\n            this.redirected = true;\n            return <Redirect to='/color'/>;\n        }\n    };\n\n    render() {\n        const {name, color} = this.props.playerData;\n        const {showModal, gameMode} = this.state;\n        return (\n            <div className='wrapPage'>\n                {this.redirect()}\n                <WrapTopName name={name} color={color} actions={this.actions()}/>\n                <Title text={'select_game_type'}/>\n                <div className='largeButtonsWrap'>\n                    <LargeButton onClick={this.openModalSinglePlayer}\n                                 text={'single player'}/>\n                    <LargeButton onClick={this.openModalMultiplayer}\n                                 text={'multiplayer'}/>\n                </div>\n                <MenuModal close={this.closeModal}\n                           state={showModal}\n                           startGame={this.selectedGameType()}\n                           gameMode={gameMode}/>\n            </div>\n        )\n    }\n\n}\n","import React, {Component} from 'react';\nimport Button from \"../../Components/Button\";\nimport Title from \"../../Components/Title\";\nimport {Link} from \"react-router-dom\";\nimport WrapTopName from \"../../Components/WrapTopName\";\n\nexport default class EnterNamePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputText: '',\n            notification: false,\n        };\n    }\n\n    onChangeText = (value) =>\n        this.setState({inputText: value, notification: false});\n\n    saveName = () => {\n        const {inputText} = this.state;\n        if (inputText) {\n            this.props.submitPlayerData({name: this.state.inputText});\n        } else {\n            this.setState({notification: true})\n        }\n    };\n\n    activeLink = () => {\n        const { inputText } = this.state;\n        const { color } = this.props.playerData;\n        if (inputText) {\n            return (color !== null) ?\n                '/mode' :\n                '/color';\n        }\n        return '/name';\n    };\n\n    changeClassNameNotification = () => {\n        const { notification } = this.state;\n        return (notification) ?\n            'input-notification_show input-notification' :\n            'input-notification_transparent input-notification';\n    };\n\n    actions = () => ({\n        goToChangeColor: () => this.props.history.push('/color')\n    });\n\n    render() {\n        const {name, color} = this.props.playerData;\n        return (\n            <div className='wrapPage'>\n                <WrapTopName name={name} color={color} actions={this.actions()}/>\n                <Title text={'enter_name'}/>\n                <input className='input' type=\"text\" onChange={(event) => this.onChangeText(event.target.value)}/>\n                <p className={this.changeClassNameNotification()}>Enteeeeer NAAAAMEEE!!1</p>\n                <Link to={this.activeLink()} params={this.state}>\n                    <Button click={this.saveName} classes='button_submit'>Save name</Button>\n                </Link>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport OpenSocket from 'socket.io-client';\nimport './App.css';\nimport StartPage from \"./Containers/StartPage/StartPage\";\nimport {HashRouter, Link, Redirect, Route} from 'react-router-dom';\nimport GamePage from \"./Containers/GamePage/GamePage\";\nimport SelectColorPage from \"./Containers/SelectColorPage/SelectColorPage\";\nimport GameModePage from \"./Containers/GameModePage/GameModePage\";\nimport {CSSTransition} from \"react-transition-group\";\nimport EnterNamePage from \"./Containers/EnterNamePage/EnterNamePage\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: null,\n            color: null,\n            id: null,\n            activeGame: false,\n        }\n    }\n  componentDidMount() {\n     if (window.innerWidth < 1200) {\n         const room = OpenSocket('http://192.168.0.109:3001/room');\n         room.on('get', function (data) {\n             console.log(data);\n         });\n         room.emit('post', {post: 'post'});\n     } else {\n         const room1 = OpenSocket('http://192.168.0.109:3001/room1');\n         room1.on('get', function (data) {\n             console.log(data);\n         });\n         room1.emit('post', {post: 'post'});\n     }\n  }\n\n  submitPlayerData = (data) =>\n      this.setState({\n          ...data,\n      });\n\n  render() {\n      const {name, color} = this.state;\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                {routes.map(({path, Component}) => (\n                    <Route key={path} exact path={path}>\n                        {({ match, history }) => (\n                            <CSSTransition\n                                in={match != null}\n                                timeout={300}\n                                classNames=\"page\"\n                                unmountOnExit\n                            >\n                                <div className=\"page\">\n                                    <Component history={history}\n                                               submitPlayerData={this.submitPlayerData}\n                                               playerData={this.state}/>\n                                </div>\n                            </CSSTransition>\n                        )}</Route>\n                ))}\n            </div>\n        </HashRouter>\n    );\n  }\n}\n\nconst routes = [\n    { path: '/',         name: 'Start',     Component: StartPage },\n    { path: '/name',     name: 'Name',      Component: EnterNamePage },\n    { path: '/color',    name: 'Color',     Component: SelectColorPage },\n    { path: '/mode',     name: 'GameMode',  Component: GameModePage },\n    { path: '/game',     name: 'Game',      Component: GamePage },\n]\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","\"use strict\";\r\nexports.__esModule = true;\r\nexports.STATUS_GAME = Object.freeze({\r\n    WIN_FIRST_PLAYER: 'WIN_FIRST_PLAYER',\r\n    WIN_SECOND_PLAYER: 'WIN_SECOND_PLAYER',\r\n    DRAW: 'DRAW',\r\n    CONTINUE: 'CONTINUE'\r\n});\r\n"],"sourceRoot":""}